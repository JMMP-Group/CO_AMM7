!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! NEMO/OCE Configuration namelist : overwrite default values defined in SHARED/namelist_ref
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! NEMO/OCE  :  1 - Domain & run manager (namrun, namcfg, namdom, namtsd, namcrs, namc1d, namc1d_uvd)
!! namelists    2 - Surface boundary (namsbc, namsbc_flx, namsbc_blk, namsbc_cpl,
!!                                    namsbc_sas, namtra_qsr, namsbc_rnf,
!!                                    namsbc_isf, namsbc_iscpl, namsbc_apr, 
!!                                    namsbc_ssr, namsbc_wave, namberg)
!!              3 - lateral boundary (namlbc, namagrif, nambdy, nambdy_tide)
!!              4 - top/bot boundary (namdrg, namdrg_top, namdrg_bot, nambbc, nambbl)
!!              5 - Tracer           (nameos, namtra_adv, namtra_ldf, namtra_eiv, namtra_dmp)
!!              6 - dynamics         (namdyn_adv, namdyn_vor, namdyn_hpg, namdyn_spg, namdyn_ldf)
!!              7 - Vertical physics (namzdf, namzdf_ric, namzdf_tke, namzdf_gls, namzdf_iwm)
!!              8 - diagnostics      (namnc4, namtrd, namspr, namflo, namhsb)
!!              9 - Obs & Assim      (namobs, nam_asminc)
!!             10 - miscellaneous    (nammpp, namctl, namsto)
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

!!======================================================================
!!              ***  Domain & Run management namelists  ***           !!
!!                                                                    !!
!!   namrun       parameters of the run
!!   namdom       space and time domain
!!   namcfg       parameters of the configuration                       (default: user defined GYRE)
!!   namwad       Wetting and drying                                    (default: OFF)
!!   namtsd       data: temperature & salinity                          (default: OFF)
!!   namcrs       coarsened grid (for outputs and/or TOP)               (ln_crs =T)
!!   namc1d       1D configuration options                              ("key_c1d")
!!   namc1d_dyndmp 1D newtonian damping applied on currents             ("key_c1d")
!!   namc1d_uvd   1D data (currents)                                    ("key_c1d")
!!======================================================================
!
!-----------------------------------------------------------------------
&namrun        !   parameters of the run
!-----------------------------------------------------------------------
   nn_no       =  0          !  Assimilation cycle index
   cn_exp      =  "co9_amm7" !  experiment name
   nn_it000    =  1          !  first time step
   nn_itend    =  288        !  last time step (288 per 24hr) 
   nn_date0    =  20150101   !  date at nit_0000 (format yyyymmdd) used if ln_rstart=F or (ln_rstart=T and nn_rstctl=0 or 1)
   nn_time0    =  0          !  initial time of day in hhmm
   nn_leapy    =  1          !  Leap year calendar (1) or not (0)
   ln_rstart   =  .false.    !  start from rest (F) or from a restart file (T)
      nn_euler    = 1     !  = 0 : start with forward time step if ln_rstart=T
      nn_rstctl   = 2     !  restart control ==> activated only if ln_rstart=T
      !                          !    = 0 nn_date0 read in namelist ; nn_it000 : read in namelist
      !                          !    = 1 nn_date0 read in namelist ; nn_it000 : check consistancy between namelist and restart
      !                          !    = 2 nn_date0 read in restart  ; nn_it000 : check consistancy between namelist and restart
      cn_ocerst_in     = "NAME_TIMESTEP_restart"   !  suffix of ocean restart name (input)
      cn_ocerst_indir  = "./RESTARTS"         !  directory from which to read input ocean restarts
      cn_ocerst_out    = "restart"            !  suffix of ocean restart name (output)
      cn_ocerst_outdir = "./RESTARTS"         !  directory in which to write output ocean restarts
   ln_iscpl    = .false.  !  cavity evolution forcing or coupling to ice sheet model
   nn_istate   = 1        !  output the initial state (1) or not (0)
   ln_rst_list = .false.  !  output restarts at list of times using nn_stocklist (T) or at set frequency with nn_stock (F)
   nn_stock    = 0        !  used only if ln_rst_list = F: output restart freqeuncy (modulo referenced to 1)
      !                          !    =  0 force to write restart files only at the end of the run
      !                          !    = -1 do not do any restart
   nn_stocklist = 0,0,0,0,0,0,0,0,0,0 ! List of timesteps when a restart file is to be written
   nn_write     = 0   !  used only if key_iomput is not defined: output frequency (modulo referenced to nn_it000)
      !                          !    =  0 force to write output files only at the end of the run
      !                          !    = -1 do not do any output file
   ln_mskland   = .false. !  mask land points in NetCDF outputs
   ln_cfmeta    = .false. !  output additional data to netCDF files required for compliance with the CF metadata standard
   ln_clobber   = .true.  !  clobber (overwrite) an existing file
   nn_chunksz   = 0       !  chunksize (bytes) for NetCDF file (works only with iom_nf90 routines)
   ln_xios_read = .false. !  use XIOS to read restart file (only for a single file restart)
   nn_wxios     = 0       !  use XIOS to write restart file 0 - no, 1 - single file output, 2 - multiple file output
/
!-----------------------------------------------------------------------
&namdom        !   time and space domain
!-----------------------------------------------------------------------
   ln_linssh   = .false.  !  =T  linear free surface  ==>>  model level are fixed in time
   rn_isfhmin  = 1.00     !  treshold [m] to discriminate grounding ice from floating ice
   !
   rn_rdt      = 300      !  time step for the dynamics and tracer
   rn_atfp     = 0.1      !  asselin time filter parameter
   !
   ln_crs      = .false.  !  Logical switch for coarsening module      (T => fill namcrs)
   !
   ln_meshmask = .false.  !  =T create a mesh file
/
!-----------------------------------------------------------------------
&namcfg        !   parameters of the configuration                      (default: use namusr_def in namelist_cfg)
!-----------------------------------------------------------------------
   ln_read_cfg = .true.   !  (=T) read the domain configuration file
      !                   !  (=F) user defined configuration           (F => create/check namusr_def)
      cn_domcfg = "./domain_cfg_co9amm7_MEsL51r10-07.nc"   ! domain configuration filename
      !
      ln_closea = .false.    !  T => keep closed seas (defined by closea_mask field) in the  
      !                      !       domain and apply special treatment of freshwater fluxes.
      !                      !  F => suppress closed seas (defined by closea_mask field) 
      !                      !       from the bathymetry at runtime.
      !                      !  If closea_mask field doesn't exist in the domain_cfg file
      !                      !       then this logical does nothing.
   ln_write_cfg = .false.  !  (=T) create the domain configuration file
      cn_domcfg_out = "domain_cfg_out" ! newly created domain configuration filename
      !
   ln_use_jattr = .false.  !  use (T) the file attribute: open_ocean_jstart, if present
   !                       !  in netcdf input files, as the start j-row for reading
/
!-----------------------------------------------------------------------
&namtsd        !    Temperature & Salinity Data  (init/dmp)             (default: OFF)
!-----------------------------------------------------------------------
   !                        ! =T  read T-S fields for:
   ln_tsd_init   = .true.   !  ocean initialisation
   ln_tsd_interp = .true.   !  Interpolation of T & S in the verticalinput data (T) or not (F)
   ln_tsd_dmp    = .false.  !  T-S restoring   (see namtra_dmp)
   
   cn_dir      = './'      !  root directory for the T-S data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_tem      = 'initcd_y2005m01.nc',             -12.,        'toce',      .true.      ,  .true., 'yearly'  ,    ''            ,    ''    ,    ''
   sn_sal      = 'initcd_y2005m01.nc',             -12.,        'soce',      .true.      ,  .true., 'yearly'  ,    ''            ,    ''    ,    ''
   sn_dep      = 'initcd_y2005m01.nc',             -12.,        'gdept',     .false.     ,  .true., 'yearly'  ,    ''            , ''       ,    ''
   sn_msk      = 'initcd_y2005m01.nc',             -12.,        'mask',      .false.     ,  .true., 'yearly'  ,    ''            , ''       ,    ''
/
!!======================================================================
!!            ***  Surface Boundary Condition namelists  ***          !!
!!                                                                    !!
!!   namsbc          surface boundary condition manager                 (default: NO selection)
!!   namsbc_flx      flux               formulation                     (ln_flx     =T)
!!   namsbc_blk      Bulk formulae formulation                          (ln_blk     =T)
!!   namsbc_cpl      CouPLed            formulation                     ("key_oasis3" )
!!   namsbc_sas      Stand-Alone Surface module                         (SAS_SRC  only)
!!   namsbc_iif      Ice-IF: use observed ice cover                     (nn_ice = 1   )
!!   namtra_qsr      penetrative solar radiation                        (ln_traqsr  =T)
!!   namsbc_ssr      sea surface restoring term (for T and/or S)        (ln_ssr     =T)
!!   namsbc_rnf      river runoffs                                      (ln_rnf     =T)
!!   namsbc_apr      Atmospheric Pressure                               (ln_apr_dyn =T)
!!   namsbc_isf      ice shelf melting/freezing                         (ln_isfcav  =T : read (ln_read_cfg=T) or set or usr_def_zgr )
!!   namsbc_iscpl    coupling option between land ice model and ocean   (ln_isfcav  =T)
!!   namsbc_wave     external fields from wave model                    (ln_wave    =T)
!!   namberg         iceberg floats                                     (ln_icebergs=T)
!!======================================================================
!
!-----------------------------------------------------------------------
&namsbc        !   Surface Boundary Condition manager                   (default: NO selection)
!-----------------------------------------------------------------------
   nn_fsbc     = 1         !  frequency of SBC module call
      !                    !  (control sea-ice & iceberg model call)
                     ! Type of air-sea fluxes 
   ln_usr      = .false.   !  user defined formulation                  (T => check usrdef_sbc)
   ln_flx      = .false.   !  flux formulation                          (T => fill namsbc_flx )
   ln_blk      = .true.    !  Bulk formulation                          (T => fill namsbc_blk )
      !              ! Type of coupling (Ocean/Ice/Atmosphere) :
   ln_cpl      = .false.   !  atmosphere coupled   formulation          ( requires key_oasis3 )
   ln_mixcpl   = .false.   !  forced-coupled mixed formulation          ( requires key_oasis3 )
   nn_components = 0       !  configuration of the opa-sas OASIS coupling
      !                    !  =0 no opa-sas OASIS coupling: default single executable config.
      !                    !  =1 opa-sas OASIS coupling: multi executable config., OPA component
      !                    !  =2 opa-sas OASIS coupling: multi executable config., SAS component 
                     ! Sea-ice :
   nn_ice      = 0         !  =0 no ice boundary condition    
      !                    !  =1 use observed ice-cover                 (  => fill namsbc_iif )
      !                    !  =2 or 3 automatically for SI3 or CICE    ("key_si3" or "key_cice")
      !                    !          except in AGRIF zoom where it has to be specified
   ln_ice_embd = .false.   !  =T embedded sea-ice (pressure + mass and salt exchanges)
      !                    !  =F levitating ice (no pressure, mass and salt exchanges)
                     ! Misc. options of sbc : 
   ln_traqsr   = .true.    !  Light penetration in the ocean            (T => fill namtra_qsr)
   ln_dm2dc    = .false.   !  daily mean to diurnal cycle on short wave
   ln_ssr      = .false.   !  Sea Surface Restoring on T and/or S       (T => fill namsbc_ssr)
   nn_fwb      = 0         !  FreshWater Budget: =0 unchecked
      !                    !     =1 global mean of e-p-r set to zero at each time step
      !                    !     =2 annual global mean of e-p-r set to zero
   ln_rnf      = .true.    !  runoffs                                   (T => fill namsbc_rnf)
   ln_apr_dyn  = .true.    !  Patm gradient added in ocean & ice Eqs.   (T => fill namsbc_apr )
   ln_isf      = .false.   !  ice shelf                                 (T   => fill namsbc_isf & namsbc_iscpl)
   ln_wave     = .false.   !  Activate coupling with wave  (T => fill namsbc_wave)
   ln_cdgw     = .false.   !  Neutral drag coefficient read from wave model (T => ln_wave=.true. & fill namsbc_wave)
   ln_sdw      = .false.   !  Read 2D Surf Stokes Drift & Computation of 3D stokes drift (T => ln_wave=.true. & fill namsbc_wave) 
   nn_sdrift   =  0        !  Parameterization for the calculation of 3D-Stokes drift from the surface Stokes drift
      !                    !   = 0 Breivik 2015 parameterization: v_z=v_0*[exp(2*k*z)/(1-8*k*z)]
      !                    !   = 1 Phillips:                      v_z=v_o*[exp(2*k*z)-beta*sqrt(-2*k*pi*z)*erfc(sqrt(-2*k*z))]
      !                    !   = 2 Phillips as (1) but using the wave frequency from a wave model
   ln_tauwoc   = .false.   !  Activate ocean stress modified by external wave induced stress (T => ln_wave=.true. & fill namsbc_wave)
   ln_tauw     = .false.   !  Activate ocean stress components from wave model
   ln_stcor    = .false.   !  Activate Stokes Coriolis term (T => ln_wave=.true. & ln_sdw=.true. & fill namsbc_wave)
   nn_lsm      = 1         !  =0 land/sea mask for input fields is not applied (keep empty land/sea mask filename field) ,
                           !  =1:n number of iterations of land/sea mask application for input fields (fill land/sea mask filename field)
/
!-----------------------------------------------------------------------
&namsbc_blk    !   namsbc_blk  generic Bulk formula                     (ln_blk =T)
!-----------------------------------------------------------------------
   !                    !  bulk algorithm :
   ln_NCAR      = .false.   ! "NCAR"      algorithm   (Large and Yeager 2008)
   ln_COARE_3p0 = .false.   ! "COARE 3.0" algorithm   (Fairall et al. 2003)
   ln_COARE_3p5 = .true.    ! "COARE 3.5" algorithm   (Edson et al. 2013)
   ln_ECMWF     = .false.   ! "ECMWF"     algorithm   (IFS cycle 31)
      !
      rn_zqt      = 2.       !  Air temperature & humidity reference height (m)
      rn_zu       = 10.       !  Wind vector reference height (m)
     ! ln_Cd_L12   = .false.   !  air-ice drags = F(ice concentration) (Lupkes et al. 2012)
     ! ln_Cd_L15   = .false.   !  air-ice drags = F(ice concentration) (Lupkes et al. 2015)
      ln_taudif   = .false.   !  HF tau contribution: use "mean of stress module - module of the mean stress" data
      rn_pfac     = 1.        !  multiplicative factor for precipitation (total & snow)
      rn_efac     = 1.        !  multiplicative factor for evaporation (0. or 1.)
      rn_vfac     = 0.        !  multiplicative factor for ocean & ice velocity used to
      !                       !  calculate the wind stress (0.=absolute or 1.=relative winds)

   cn_dir      = './SBC/'           !  root directory for the fluxes data location
   !___________!_________________________!___________________!___________!_____________!________!___________!______________________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename             ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                              ! pairing  !    filename   !
   sn_humi     =   'ERA5_SPH'            ,        1          ,   'SPH'   ,    .true.   , .false.,  'yearly' ,  'weights_era5_bicubic.nc'   ,    ''    ,   'ERA5_LSM'
   sn_prec     =   'ERA5_MTPR'           ,        1          ,  'MTPR'   ,    .true.   , .false.,  'yearly' ,  'weights_era5_bicubic.nc'   ,    ''    ,   'ERA5_LSM'
   sn_qlw      =   'ERA5_MSDWLWRF'       ,        1          , 'MSDWLWRF',    .true.   , .false.,  'yearly' ,  'weights_era5_bicubic.nc'   ,    ''    ,   'ERA5_LSM'
   sn_qsr      =   'ERA5_MSDWSWRF'       ,        1          , 'MSDWSWRF',    .true.   , .false.,  'yearly' ,  'weights_era5_bicubic.nc'   ,    ''    ,   'ERA5_LSM'
   sn_snow     =   'ERA5_MSR'            ,        1          ,   'MSR'   ,    .true.   , .false.,  'yearly' ,  'weights_era5_bicubic.nc'   ,    ''    ,   'ERA5_LSM'
   sn_tair     =   'ERA5_T2M'            ,        1          ,   'T2M'   ,    .true.   , .false.,  'yearly' ,  'weights_era5_bicubic.nc'   ,    ''    ,   'ERA5_LSM'
   sn_wndi     =   'ERA5_U10'            ,        1          ,   'U10'   ,    .true.   , .false.,  'yearly' ,  'weights_era5_bicubic.nc'   ,  'Uwnd'  ,   'ERA5_LSM'
   sn_wndj     =   'ERA5_V10'            ,        1          ,   'V10'   ,    .true.   , .false.,  'yearly' ,  'weights_era5_bicubic.nc'   ,  'Vwnd'  ,   'ERA5_LSM'
   sn_slp      =   'ERA5_MSL'            ,        1          ,   'MSL'   ,    .true.   , .false.,  'yearly' ,  'weights_era5_bicubic.nc'   ,    ''    ,   'ERA5_LSM'
/
!-----------------------------------------------------------------------
&namtra_qsr    !   penetrative solar radiation                          (ln_traqsr =T)
!-----------------------------------------------------------------------
   !                       !  type of penetration                        (default: NO selection)
   ln_qsr_rgb   = .false.     !  RGB light penetration (Red-Green-Blue)
   ln_qsr_2bd   = .false.     !  2BD light penetration (two bands)
   ln_qsr_bio   = .false.     !  bio-model light penetration
   ln_qsr_kd490 = .true.      !  diffuse attenuation coefficient 490 nm 
   !                       !  RGB & 2BD choices:
   rn_abs      =   0.58       !  RGB & 2BD: fraction absorbed in the very near surface
   rn_si0      =   0.35       !  RGB & 2BD: shortess depth of extinction
   nn_chldta   =   0          !  RGB : Chl data (=1) or cst value (=0)
   rn_si1      =   23.0       !  2BD : longest depth of extinction

   cn_dir      = './SBC/'      !  root directory for the chlorophyl data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_chl      ='kd490'                  ,        -1         , 'kd_490'  ,   .true.    , .true. , 'yearly'  , ''               , ''       , ''
   sn_kd490    ='kd490'                  ,        -1         , 'kd_490'  ,   .true.    , .true. , 'yearly'  , ''               , ''       , ''
/
!-----------------------------------------------------------------------
&namsbc_ssr    !   surface boundary condition : sea surface restoring   (ln_ssr =T)
!-----------------------------------------------------------------------
   nn_sstr     =     0     !  add a retroaction term in the surface heat       flux (=1) or not (=0)
   nn_sssr     =     0     !  add a damping     term in the surface freshwater flux (=2)
                           !  or to SSS only (=1) or no damping term (=0)
   rn_deds     =  -27.7    !  magnitude of the damping on salinity   [mm/day]

   cn_dir      = './SBC/' !  root directory for the location of the runoff files
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_sst      = 'amm12_sstref'          ,        24         ,  'sst'     ,   .true.   , .false., 'daily'   , ''               , ''       , ''
   sn_sss      = 'sss_data'              ,        -1         ,  'sss'     ,   .true.   , .true. , 'yearly'  , ''               , ''       , ''
/
!-----------------------------------------------------------------------
&namsbc_rnf    !   runoffs                                              (ln_rnf =T)
!-----------------------------------------------------------------------
   ln_rnf_mouth  = .false.   !  specific treatment at rivers mouths
      rn_hrnf    =  1000.e0  !  depth over which enhanced vertical mixing is used    (ln_rnf_mouth=T)
      rn_avt_rnf =    10     !  value of the additional vertical mixing coef. [m2/s] (ln_rnf_mouth=T)
   ln_rnf_depth  = .true.    !  read in depth information for runoff
   ln_rnf_tem    = .false.   !  read in temperature information for runoff
   ln_rnf_sal    = .false.   !  read in salinity information for runoff
   rn_rfact      =  1.e0     !  multiplicative factor for runoff
   cn_dir = './RIV/'  !  root directory for the flux data location
   !___________!_________________________________!___________________!___________!_____________!_________!___________!__________________!__________!_______________!
   !           !  file name                      ! frequency (hours) ! variable  ! time interp.!  clim   ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                                 !  (if <0  months)  !   name    !   (logical) !  (T/F)  ! 'monthly' !                  ! pairing  !    filename   !
   sn_rnf      = 'rivers'                        ,        24         , 'rorunoff',   .true.    , .false. , 'yearly'  , ''               , ''       , ''
   sn_cnf      = 'runoff_1m_nomask'              ,         0         , 'socoefr0',   .false.   , .true.  , 'yearly'  , ''               , ''       , ''
   sn_s_rnf    = 'rivers'                        ,        24         , 'rosaline',   .true.    , .false. , 'yearly'  , ''               , ''       , ''
   sn_t_rnf    = 'rivers'                        ,        24         , 'rotemper',   .true.    , .false. , 'yearly'  , ''               , ''       , ''
   sn_dep_rnf  = 'rivers'                        ,        24         , 'rodepth' ,   .false.   , .false. , 'yearly'  , ''               , ''       , ''
/
!-----------------------------------------------------------------------
&namsbc_apr    !   Atmospheric pressure used as ocean forcing           (ln_apr_dyn =T)
!-----------------------------------------------------------------------
   rn_pref     = 101000.   !  reference atmospheric pressure   [N/m2]
   ln_ref_apr  = .false.   !  ref. pressure: global mean Patm (T) or a constant (F)
   ln_apr_obc  = .true.    !  inverse barometer added to OBC ssh data

   cn_dir = './SBC/'        !  root directory for the Patm data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_apr      = 'ERA5_MSL'              ,          1        ,    'MSL'  ,    .true.   , .false., 'yearly'  ,'weights_era5_bicubic.nc','','ERA5_LSM'
/

/
!!======================================================================
!!               ***  Lateral boundary condition  ***                 !!
!!                                                                    !!
!!   namlbc        lateral momentum boundary condition                  (default: NO selection)
!!   namagrif      agrif nested grid   (read by child model only)       ("key_agrif")
!!   nam_tide      Tidal forcing                                        (default: OFF)
!!   nambdy        Unstructured open boundaries                         (default: OFF)
!!   nambdy_dta    Unstructured open boundaries - external data         (see  nambdy)
!!   nambdy_tide   tidal forcing at open boundaries                     (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&namlbc        !   lateral momentum boundary condition                  (default: NO selection)
!-----------------------------------------------------------------------
   !                       !  free slip  !   partial slip  !   no slip   ! strong slip
   rn_shlat    =  0        !  shlat = 0  !  0 < shlat < 2  !  shlat = 2  !  2 < shlat
   ln_vorlat   = .false.   !  consistency of vorticity boundary condition with analytical Eqs.
/
!-----------------------------------------------------------------------
&nam_tide      !   tide parameters                                      (default: OFF)
!-----------------------------------------------------------------------
   ln_tide       = .true.   ! Activate tides
   ln_tide_pot   = .true.   !  use tidal potential forcing

   clname(1)     =   'Q1'   !  name of constituent
   clname(2)     =   'O1'
   clname(3)     =   'P1'
   clname(4)     =   'S1'
   clname(5)     =   'K1'
   clname(6)     =   '2N2'
   clname(7)     =   'MU2'
   clname(8)     =   'N2'
   clname(9)     =   'NU2'
   clname(10)    =   'M2'
   clname(11)    =   'L2'
   clname(12)    =   'T2'
   clname(13)    =   'S2'
   clname(14)    =   'K2'
   clname(15)    =   'M4'
/
!-----------------------------------------------------------------------
&nambdy        !  unstructured open boundaries                          (default: OFF)
!-----------------------------------------------------------------------
    ln_bdy         = .true.   !  Use unstructured open boundaries
    nb_bdy         =  2       !  number of open boundary sets
    !
    ln_coords_file = .true., .true.                                 !  =T : read bdy coordinates from file
    cn_coords_file = 'coordinates.bdy.nc', 'coordinates.skagbdy.nc' !  bdy coordinates files
    ln_mask_file   = .false.                 !  =T : read mask from file
    cn_mask_file   = ''                      !  name of mask file (if ln_mask_file=.TRUE.)
    cn_dyn2d       = 'flather', 'flather'    !
    nn_dyn2d_dta   =  3,1                    !  = 0, bdy data are equal to the initial state
                                             !  = 1, bdy data are read in 'bdydata   .nc' files
                                             !  = 2, use tidal harmonic forcing data from files
                                             !  = 3, use external data AND tidal harmonic forcing
    cn_dyn3d      =  'zerograd','zerograd'   ! 
    nn_dyn3d_dta  =  1, 1                    !  = 0, bdy data are equal to the initial state
                                             !  = 1, bdy data are read in 'bdydata   .nc' files
    cn_tra        =  'frs','frs' !           
    nn_tra_dta    =  1, 1                    !  = 0, bdy data are equal to the initial state
                                             !  = 1, bdy data are read in 'bdydata   .nc' files
    cn_ice        =  'none', 'none'          !
    nn_ice_dta    =  0, 0                    !  = 0, bdy data are equal to the initial state
                                             !  = 1, bdy data are read in 'bdydata   .nc' files
    ln_tra_dmp    = .false., .false.         !  open boudaries conditions for tracers
    ln_dyn3d_dmp  = .false., .false.         !  open boundary condition for baroclinic velocities
    rn_time_dmp   =  8., 8.                  !  Damping time scale in days
    rn_time_dmp_out = 64., 64.               !  Outflow damping time scale
    nn_rimwidth   = 10, 10                   !  width of the relaxation zone
    ln_vol        = .false.                  !  total volume correction (see nn_volctl parameter)
    nn_volctl     = 1                        !  = 0, the total water flux across open boundaries is zero
/
!-----------------------------------------------------------------------
&nambdy_ssh
!-----------------------------------------------------------------------
  ln_ssh_bdy=.true.,.false.
  rn_ssh_shift=0.,0.
/
!-----------------------------------------------------------------------
&nambdy_dta    !  open boundaries - external data                       
!-----------------------------------------------------------------------
   ln_zinterp  = .true.       !  T if a vertical interpolation is required. Variables gdep[tuv] and e3[tuv] must exist in the file
   !                          !  automatically defined to T if the number of vertical levels in bdy dta /= jpk
   ln_full_vel = .false.      !  T if [uv]3d are "full" velocities and not only its baroclinic components
   !
   cn_dir  = './BDY/'
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   bn_ssh      =    'amm7_bt_bdyT'       ,         24        , 'detrended_sossheig' ,    .true.     , .false. ,  'daily'  ,    ''    ,   ''  , ' '
   bn_u2d      =    'amm7_bt_bdyU'       ,         24        , 'vobtcrtx',    .true.   , .false. ,  'daily'  ,    ''    ,   ''   ,   ''
   bn_v2d      =    'amm7_bt_bdyV'       ,         24        , 'vobtcrty',    .true.   , .false. ,  'daily'  ,    ''    ,   ''   ,   ''
   bn_u3d      =    'amm7_bdyU'          ,         24        , 'vozocrtx',    .true.   , .false. ,  'daily'  ,    ''    ,   ''   ,   ''
   bn_v3d      =    'amm7_bdyV'          ,         24        , 'vomecrty',    .true.   , .false. ,  'daily'  ,    ''    ,   ''   ,   ''
   bn_tem      =    'amm7_bdyT'          ,         24        , 'votemper',    .true.   , .false. ,  'daily'  ,    ''    ,   ''   ,   ''
   bn_sal      =    'amm7_bdyT'          ,         24        , 'vosaline',    .true.   , .false. ,  'daily'  ,    ''    ,   ''   ,   ''
/
!-----------------------------------------------------------------------
&nambdy_dta      !  open boundaries - external data           ("key_bdy")
!-----------------------------------------------------------------------
   ln_zinterp  = .true.       !  T if a vertical interpolation is required. Variables gdep[tuv] and e3[tuv] must exist in the file
   !                          !  automatically defined to T if the number of vertical levels in bdy dta /= jpk
   ln_full_vel = .false.       !  T if [uv]3d are "full" velocities and not only its baroclinic components
   !
   cn_dir  =   './BDY_SKAG/'
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   bn_ssh      =  'SF51_bt_bdyT'     ,         24        , 'sossheig',     .true.  , .false.,  'daily'  ,    ''    ,   ''   ,  ''
   bn_u2d      =  'SF51_bt_bdyU'     ,         24        , 'vobtcrtx',     .true.  , .false.,  'daily'  ,    ''    ,   ''   ,  ''
   bn_v2d      =  'SF51_bt_bdyV'     ,         24        , 'vobtcrty',     .true.  , .false.,  'daily'  ,    ''    ,   ''   ,  ''
   bn_u3d      =  'SF51_bdyU'        ,         24        , 'vozocrtx',     .true.  , .false.,  'daily'  ,    ''    ,   ''   ,  ''
   bn_v3d      =  'SF51_bdyV'        ,         24        , 'vomecrty',     .true.  , .false.,  'daily'  ,    ''    ,   ''   ,  ''
   bn_tem      =  'SF51_bdyT'        ,         24        , 'votemper',     .true.  , .false.,  'daily'  ,    ''    ,   ''   ,  ''
   bn_sal      =  'SF51_bdyT'        ,         24        , 'vosaline',     .true.  , .false.,  'daily'  ,    ''    ,   ''   ,  ''
/
!-----------------------------------------------------------------------
&nambdy_tide   !  tidal forcing at open boundaries
!-----------------------------------------------------------------------
   filtide      = 'TIDE/amm7_bdytide_'      !  file name root of tidal forcing files
/
!!======================================================================
!!                ***  Top/Bottom boundary condition  ***             !!
!!                                                                    !!
!!   namdrg        top/bottom drag coefficient                          (default: NO selection)
!!   namdrg_top    top    friction                                      (ln_OFF =F & ln_isfcav=T)
!!   namdrg_bot    bottom friction                                      (ln_OFF =F)
!!   nambbc        bottom temperature boundary condition                (default: OFF)
!!   nambbl        bottom boundary layer scheme                         (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&namdrg        !   top/bottom drag coefficient                          (default: NO selection)
!-----------------------------------------------------------------------
   ln_OFF      = .false.   !  free-slip       : Cd = 0                  (F => fill namdrg_bot
   ln_lin      = .false.   !  linear  drag: Cd = Cd0 Uc0                   &   namdrg_top)
   ln_non_lin  = .false.   !  non-linear  drag: Cd = Cd0 |U|
   ln_loglayer = .true.    !  logarithmic drag: Cd = vkarmn/log(z/z0) |U|
   !
   ln_drgimp   = .true.    !  implicit top/bottom friction flag
/
!-----------------------------------------------------------------------
&namdrg_bot    !   BOTTOM friction                                  
!-----------------------------------------------------------------------
   rn_Cd0     =  1.e-3    !  drag coefficient [-]
   rn_Uc0     =  0.4      !  ref. velocity [m/s] (linear drag=Cd0*Uc0) 
   rn_Cdmax   =  0.1      !  drag value maximum [-] (logarithmic drag)
   rn_ke0     =  0.0e0    !  background kinetic energy  [m2/s2] (non-linear cases)
   rn_z0      =  0.003    !  roughness [m]  (ln_loglayer=T)
/
!-----------------------------------------------------------------------
&namdrg_top    !   TOP friction
!-----------------------------------------------------------------------
   rn_Cd0     =  2.5e-3   !  drag coefficient [-]
   rn_Uc0     =  0.4      !  ref. velocity [m/s] (linear drag=Cd0*Uc0)
   rn_Cdmax   =  0.1      !  drag value maximum [-] (logarithmic drag)
   rn_ke0     =  0.0e0    !  background kinetic energy  [m2/s2] (non-linear cases)
   rn_z0      =  0.003    !  roughness [m]  (ln_loglayer=T)
/
!!======================================================================
!!                        Tracer (T & S) namelists                    !!
!!                                                                    !!
!!   nameos        equation of state                                    (default: NO selection)
!!   namtra_adv    advection scheme                                     (default: NO selection)
!!   namtra_ldf    lateral diffusion scheme                             (default: NO selection)
!!   namtra_mle    mixed layer eddy param. (Fox-Kemper param.)          (default: OFF)
!!   namtra_eiv    eddy induced velocity param.                         (default: OFF)
!!   namtra_dmp    T & S newtonian damping                              (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&nameos        !   ocean Equation Of Seawater                           (default: NO selection)
!-----------------------------------------------------------------------
   ln_teos10  = .false.         !  = Use TEOS-10 equation of state
   ln_eos80   = .true.
   rn_lambda2 = 5.4914e-4 
/
!-----------------------------------------------------------------------
&namtra_adv    !   advection scheme for tracer                          (default: NO selection)
!-----------------------------------------------------------------------
   ln_traadv_fct = .true. !  FCT scheme
      nn_fct_h   =  4            !  =2/4, horizontal 2nd / 4th order
      nn_fct_v   =  2            !  =2/4, vertical   2nd / COMPACT 4th order
/
!-----------------------------------------------------------------------
&namtra_mle    !   mixed layer eddy parametrisation (Fox-Kemper)       (default: OFF)
!-----------------------------------------------------------------------
   ln_mle      = .true.   ! (T) use the Mixed Layer Eddy (MLE) parameterisation
/
!-----------------------------------------------------------------------
&namtra_ldf    !   lateral diffusion scheme for tracers                 (default: NO selection)
!-----------------------------------------------------------------------
   ln_traldf_lap   =  .true.   ! T   laplacian operator
   ln_traldf_hor   =  .true.   ! T   horizontal (geopotential)

   !                       !  Coefficients:
   nn_aht_ijk_t    = 0         !  =  0   constant = 1/2  Ud*Ld   (lap case) 
      rn_Ud        = 0.01           !  lateral diffusive velocity [m/s] (nn_aht_ijk_t= 0, 10, 20, 30)
      rn_Ld        = 10.e+3         !  lateral diffusive length   [m]   (nn_aht_ijk_t= 0, 10)
/
!!======================================================================
!!                      ***  Dynamics namelists  ***                  !!
!!                                                                    !!
!!   nam_vvl       vertical coordinate options                          (default: z-star)
!!   namdyn_adv    formulation of the momentum advection                (default: NO selection)
!!   namdyn_vor    advection scheme                                     (default: NO selection)
!!   namdyn_hpg    hydrostatic pressure gradient                        (default: NO selection)
!!   namdyn_spg    surface pressure gradient                            (default: NO selection)
!!   namdyn_ldf    lateral diffusion scheme                             (default: NO selection)
!!   namdta_dyn    offline TOP: dynamics read in files                  (OFF_SRC only)
!!======================================================================
!
!-----------------------------------------------------------------------
&nam_vvl       !   vertical coordinate options                          (default: z-star)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namdyn_adv    !   formulation of the momentum advection                (default: NO selection)
!-----------------------------------------------------------------------
   ln_dynadv_vec = .true.  !  vector form - 2nd centered scheme
     nn_dynkeg   = 0       ! grad(KE) scheme: =0   C2  ;  =1   Hollingsworth correction
/
!-----------------------------------------------------------------------
&namdyn_vor    !   Vorticity / Coriolis scheme                          (default: NO selection)
!-----------------------------------------------------------------------
   ln_dynvor_een = .true.  !  energy & enstrophy scheme
      nn_een_e3f = 1       !  e3f = masked averaging of e3t divided by 4 (=0) or by the sum of mask (=1)
/
!-----------------------------------------------------------------------
&namdyn_hpg    !   Hydrostatic pressure gradient option                 (default: NO selection)
!-----------------------------------------------------------------------
   ln_hpg_prj  = .true.   !  s-coordinate (Pressure Jacobian scheme)
   ln_hpg_sco  = .false.  ! 
/
!-----------------------------------------------------------------------
&namdyn_spg    !   surface pressure gradient                            (default: NO selection)
!-----------------------------------------------------------------------
   ln_dynspg_exp = .false.  ! explicit free surface
   ln_dynspg_ts  = .true.   ! split-explicit free surface
   ln_bt_auto    = .false.  ! Number of sub-step defined from:
   nn_baro       = 30       ! =F : the number of sub-step in rn_rdt seconds
   ln_bt_fw      = .true.   ! Forward integration of barotropic Eqs.
   ln_bt_av      = .true.   ! Time filtering of barotropic variables
   nn_bt_flt     = 1        ! Time filter choice  = 0 None
   !                        !                     = 1 Boxcar over   nn_baro sub-steps
   !                        !                     = 2 Boxcar over 2*nn_baro  "    "
   rn_bt_cmax   =  0.8      ! =T : the Maximum Courant Number allowed
/
!-----------------------------------------------------------------------
&namdyn_ldf    !   lateral diffusion on momentum                        (default: NO selection)
!-----------------------------------------------------------------------
   ln_dynldf_blp = .true.     !  bilaplacian operator
   ln_dynldf_lap = .false. 
   ln_dynldf_lev = .true.     !  iso-level
   ln_dynldf_iso = .false.  
   ln_dynldf_hor = .false. 

   nn_ahm_ijk_t  = 0      !  =0   constant = 1/12 Uv*Lv^3 (blp case)
   rn_Uv      = 0.12      !  lateral viscous velocity [m/s]
   rn_Lv      = 10.e+3    !  lateral viscous length   [m]  
   rn_csmc    = 2         !  Smagorinsky constant of proportionality  
   rn_minfac  = 1.e-3     !  multiplier of theorectical lower limit 
/
!!======================================================================
!!                     vertical physics namelists                     !!
!!                                                                    !!
!!    namzdf        vertical physics manager                            (default: NO selection)
!!    namzdf_ric    richardson number vertical mixing                   (ln_zdfric=T)
!!    namzdf_tke    TKE vertical mixing                                 (ln_zdftke=T)
!!    namzdf_gls    GLS vertical mixing                                 (ln_zdfgls=T)
!!    namzdf_osm    OSM vertical diffusion                              (ln_zdfosm=T)
!!    namzdf_iwm    tidal mixing parameterization                       (ln_zdfiwm=T)
!!======================================================================
!
!-----------------------------------------------------------------------
&namzdf        !   vertical physics                                     (default: NO selection)
!-----------------------------------------------------------------------
   ln_zdfgls   =  .true.       !  Generic Length Scale closure              (T =>   fill namzdf_gls)                   ! coefficients
 
   ln_zdfevd   =  .false.
   nn_evdm     =    1
   rn_avm0     =   0.1e-6     !  vertical eddy viscosity   [m2/s]       (background Kz if ln_zdfcst=F)
   rn_avt0     =   0.1e-6     !  vertical eddy diffusivity [m2/s]       (background Kz if ln_zdfcst=F)
   nn_avb      =    0         !  profile for background avt & avm (=1) or not (=0)
   nn_havtb    =    0         !  horizontal shape for avtb (=1) or not (=0)
/
!-----------------------------------------------------------------------
&namzdf_gls    !   GLS vertical diffusion                               (ln_zdfgls =T)
!-----------------------------------------------------------------------
   rn_charn      =  100000.  !  Charnock constant for wb induced roughness length
   nn_z0_met     = 1         !  Method for surface roughness computation (0/1/2)
   rn_emin       = 1.0e-6
   rn_epsmin     = 1.0e-12   !1.0e-9
   ln_length_lim = .true.
   rn_clim_galp  = 0.267
   ln_sigpsi     = .true.
   rn_hsro       = 0.003
   rn_crban      = 100.
   rn_frac_hs    =   1.3
   nn_bc_surf    =   1
   nn_bc_bot     =   1 
   nn_z0_met     =   1 
   nn_stab_func  =   2
   nn_clos       =   1
/
!!======================================================================
!!                  ***  Diagnostics namelists  ***                   !!
!!                                                                    !!
!!   namtrd       dynamics and/or tracer trends                         (default: OFF)
!!   namptr       Poleward Transport Diagnostics                        (default: OFF)
!!   namhsb       Heat and salt budgets                                 (default: OFF)
!!   namdiu       Cool skin and warm layer models                       (default: OFF)
!!   namdiu       Cool skin and warm layer models                       (default: OFF)
!!   namflo       float parameters                                      ("key_float")
!!   nam_diaharm  Harmonic analysis of tidal constituents               ("key_diaharm")
!!   namdct       transports through some sections                      ("key_diadct")
!!   nam_diatmb   Top Middle Bottom Output                              (default: OFF)
!!   nam_dia25h   25h Mean Output                                       (default: OFF)
!!   namnc4       netcdf4 chunking and compression settings             ("key_netcdf4")
!!======================================================================
!
!-----------------------------------------------------------------------
&namtrd        !   trend diagnostics                                    (default: OFF)
!-----------------------------------------------------------------------
   ln_glo_trd  = .false.    ! (T) global domain averaged diag for T, T^2, KE, and PE
   ln_dyn_trd  = .false.   ! (T) 3D momentum trend output
   ln_dyn_mxl  = .false.   ! (T) 2D momentum trends averaged over the mixed layer (not coded yet)
   ln_vor_trd  = .false.   ! (T) 2D barotropic vorticity trends (not coded yet)
   ln_KE_trd   = .false.   ! (T) 3D Kinetic   Energy     trends
   ln_PE_trd   = .false.   ! (T) 3D Potential Energy     trends
   ln_tra_trd  = .false.    ! (T) 3D tracer trend output
   ln_tra_mxl  = .false.   ! (T) 2D tracer trends averaged over the mixed layer (not coded yet)
   nn_trd      = 2016      !  print frequency (ln_glo_trd=T) (unit=time step)
/
!-----------------------------------------------------------------------
&nam_diatmb    !  Top Middle Bottom Output                              (default F)
!-----------------------------------------------------------------------
   ln_diatmb  = .false.    !  Choose Top Middle and Bottom output or not
/
!-----------------------------------------------------------------------
&nam_diaharm   !   Harmonic analysis of tidal constituents              (default: OFF)
!-----------------------------------------------------------------------
    ln_diaharm = .false.   ! Choose tidal harmonic output or not
       nit000_han = 12      !    First time step used for harmonic analysis
       nitend_han = 105120     !    Last time step used for harmonic analysis
       nstep_han  = 12     !    Time step frequency for harmonic analysis
       tname(1)   = 'M2'   !    Name of tidal constituents
       tname(2)   = 'S2'   !              ---
/
!-----------------------------------------------------------------------
&nam_dia25h    !  25h Mean Output                                       (default F)
!-----------------------------------------------------------------------
   ln_dia25h  = .false.    ! Choose 25h mean output or not
/
!!======================================================================
!!               ***  Observation & Assimilation  ***                 !!
!!                                                                    !!
!!   namobs       observation and model comparison                      (default: OFF)
!!   nam_asminc   assimilation increments                               ('key_asminc')
!!======================================================================
!
!!======================================================================
!!                  ***  Miscellaneous namelists  ***                 !!
!!                                                                    !!
!!   nammpp            Massively Parallel Processing                    ("key_mpp_mpi")
!!   namctl            Control prints                                   (default: OFF)
!!   namsto            Stochastic parametrization of EOS                (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&nammpp        !   Massively Parallel Processing                        ("key_mpp_mpi")
!-----------------------------------------------------------------------
   ln_listonly =  .false.  !  do nothing else than listing the best domain decompositions (with land domains suppression)
   !                       !  if T: the largest number of cores tested is defined by max(mppsize, jpni*jpnj)
   ln_nnogather =  .true.  !  activate code to avoid mpi_allgather use at the northfold
   jpni        = 11      !  jpni   number of processors following i (set automatically if < 1)
   jpnj        = 11      !  jpnj   number of processors following j (set automatically if < 1)
/
!-----------------------------------------------------------------------
&namctl        !   Control prints                                       (default: OFF)
!-----------------------------------------------------------------------
   ln_ctl = .FALSE.                 ! Toggle all report printing on/off (T/F); Ignored if sn_cfctl%l_config is T
     sn_cfctl%l_config = .TRUE.     ! IF .true. then control which reports are written with the following
       sn_cfctl%l_runstat = .TRUE.  ! switches and which areas produce reports with the proc integer settings.
       sn_cfctl%l_trcstat = .FALSE. ! The default settings for the proc integers should ensure
       sn_cfctl%l_oceout  = .FALSE. ! that  all areas report.
       sn_cfctl%l_layout  = .FALSE. !
       sn_cfctl%l_mppout  = .FALSE. !
       sn_cfctl%l_mpptop  = .FALSE. !
       sn_cfctl%procmin   = 0       ! Minimum area number for reporting [default:0]
       sn_cfctl%procmax   = 1000000 ! Maximum area number for reporting [default:1000000]
       sn_cfctl%procincr  = 1       ! Increment for optional subsetting of areas [default:1]
       sn_cfctl%ptimincr  = 1        ! Timestep increment for writing time step progress info
   nn_print    =    0      !  level of print (0 no extra print)
   nn_ictls    =    0      !  start i indice of control sum (use to compare mono versus
   nn_ictle    =    0      !  end   i indice of control sum        multi processor runs
   nn_jctls    =    0      !  start j indice of control               over a subdomain)
   nn_jctle    =    0      !  end   j indice of control
   nn_isplt    =    1      !  number of processors in i-direction
   nn_jsplt    =    1      !  number of processors in j-direction
   ln_timing   = .true.   !  timing by routine write out in timing.output file
   ln_diacfl   = .false.   !  CFL diagnostics write out in cfl_diagnostics.ascii
/
